@import "../../css/units.css";
@import "../../css/colors.css";
@import "../../css/z-index.css";

.page-wrapper {
    height: 100%;
    -ms-user-select: none;
    -moz-user-select: -moz-none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    user-select: none;
}

.body-wrapper {
    background-color: $ui-primary;
    height: calc(100% - $menu-bar-height);
}

@media(min-height: calc(((100vw - (0.5rem * 3))*0.6) * (3/4) + 6rem)) {
    .body-wrapper {
        height: calc(100% - $menu-bar-height) !important;
    }
}
 
    .body-wrapper * {
        box-sizing: border-box;
    }

.flex-wrapper {
    display: flex;
    /*
        Make 2 columns:
        a) for the blocks + workspace panes, and
        b) for combined stage menu + stage + sprite/stage selectors
    */
    /*
        Stop scrollbar popping in and out from scratch-blocks border issue
        https://github.com/LLK/scratch-gui/issues/318
    */
    overflow: hidden;
    flex-direction: row-reverse;
}

.block-wrapper {
    display: block;
    height: 100%;
    overflow: hidden;
}

.editor-wrapper {
    /*
        This is carefully balanced--  the minimum width at which the GUI will be displayed is 1024px.
        At that size, the stage pane is 408px wide, with $space of padding to each side.
        However, we must also add the border width to the stage pane. All-in-all, the stage pane's final width is
        408px + ($space + $stage-standard-border-width * 2) (one border & padding per left/right side).

        @todo This is in place to prevent "doubling up" of horizontal scrollbars in narrow windows, but there are likely
        much better ways to solve that (e.g. undo #2124, remove this flex-basis entirely). However, they run their own
        risks of breaking things, so let's just leave this as-is for the time being.
    */
    flex-grow: 1;
    flex-shrink: 0;
    position: relative;
    display: flex;
    flex-direction: column;
    height: 100%;
}

.tab-list {
    display: flex;
    flex-direction: row;
    background-color: white;
    border-bottom: 1px solid $ui-black-transparent;
    z-index: $z-index-extension-button;
    margin-bottom: 4px !important;
}


.tab {
    width: 100%;
    height: 2.5rem;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 0.8rem;
    display: flex;
    justify-content: center;
    align-items: center;
    user-select: none;
    white-space: nowrap;
    border: 0;
    border-bottom: 5px solid white;
    font-weight: bold;  /**rogic-mobile*/
}

.tab:hover {
    border: 4px solid rgb(185,215,255);
}

.tab.is-selected {
    border: 4px solid $motion-primary;
}

/* Tab style overrides from react-tabs */
    .tab.is-selected:after {
        display: none;
    }

.tab.is-selected:focus {
    outline: none;
    box-shadow: none;
}

.tabs {  /**rogic-mobile*/
    display: flex;
    flex-direction: column;
    position: relative;
    margin-left: 0.5rem;
    margin-bottom: 0.5rem;
    margin-right: 0.5rem;
    width: calc((100vw - (0.5rem * 3))*0.4);
    height: calc(((100vw - (0.5rem * 3))*0.6) * (3/4));
    overflow-y: auto;
}

@media (max-height: 430px) {
    .tabs {
        overflow-y: auto;
    }
}

.tabs-device {  /**rogic-mobile*/
    display: flex;
    flex-direction: column;
    position: relative;
    margin-left: 0.5rem;
    margin-bottom: 0.5rem;
    margin-right: 0.5rem;
    width: calc((100vw - (0.5rem * 3))*0.4);
    height: calc(((100vw - (0.5rem * 3))*0.6) * (3/4));
    overflow: hidden;
}

.tab-panel {
    position: relative;
    flex-grow: 1;
    display: none;
}

    .tab-panel.is-selected {
        display: flex;
    }

.blocks-wrapper {
    flex-grow: 1;
    position: relative;
}

.stage-and-target-wrapper {
    /*
        Makes rows for children:
          1) stage menu
          2) stage
          3) sprite/stage selectors
        Only reason we need this, is so .targetWrapper, which holds the selectors,
        goes to full vertical height of the window
    */
    flex-direction: row; /* 고민 중 */
    align-items: center; /* 고민 중 */
    margin-top: 0.5rem;
}

    .stage-and-target-wrapper.large {
        /* Fix the max width to max large stage size (defined in layout_constants.js) + gutter size */
        max-width: calc(480px + calc($space * 2));
    }

    .stage-and-target-wrapper.large-constrained {
        /* Fix the max width to max largeConstrained stage size (defined in layout_constants.js) + gutter size */
        /*모니터 해상도에 따른 화면 크기 제한(최대 85%)*/
        max-width: calc(408px + calc($space * 2));
    }

    .stage-and-target-wrapper.small {
        /* Fix the max width to max small stage size (defined in layout_constants.js) + gutter size */
        max-width: calc(240px + calc($space * 2));
    }

    .stage-and-target-wrapper.small-constrained {
        /* Fix the max width to max small stage size (defined in layout_constants.js) + gutter size */
        max-width: calc(240px + calc($space * 2));
    }

    .stage-and-target-wrapper.resize {
        /* Fix the max width to max large stage size (defined in layout_constants.js) + gutter size */
        max-width: calc(480px + calc($space * 2));
    }

    .stage-and-target-wrapper.resize-constrained {
        /* Fix the max width to max large stage size (defined in layout_constants.js) + gutter size */
        /*모니터 해상도에 따른 화면 크기 제한(최대 85%)*/
        max-width: calc(408px + calc($space * 2));
    }

.target-wrapper {
    display: flex;
    flex-grow: 1;
    flex-basis: 0;
    min-height: 0; /* this makes it work in Firefox */
    /*
        For making the sprite-selector a scrollable pane
        @todo: Not working in Safari
    */
    /* TODO this also breaks the thermometer menu */
}

.extension-button-container {
    width: 3.75rem;
    height: 3.25rem;
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: $z-index-extension-button;
    background: $motion-primary;
    border: 1px solid $motion-primary;
    box-sizing: content-box; /* To match scratch-block vertical toolbox borders */
}

$fade-out-distance: 15px;

.extension-button-container:before {
    content: "";
    position: absolute;
    top: calc(calc(-1 * $fade-out-distance) - 1px);
    left: -1px;
    background: linear-gradient(rgba(0, 0, 0, 0),rgba(0, 0, 0, 0.15));
    height: $fade-out-distance;
    width: calc(100% + 0.5px);
}


.extension-button {
    background: none;
    border: none;
    outline: none;
    width: 100%;
    height: 100%;
    cursor: pointer;
}

.extension-button-icon {
    width: 1.75rem;
    height: 1.75rem;
}

[dir="rtl"] .extension-button-icon {
    transform: scaleX(-1);
}

.extension-button > div {
    margin-top: 0;
}

/* Sprite Selection Watermark */
.watermark {
    position: absolute;
    top: 1.25rem;
    pointer-events: none;
}

[dir="ltr"] .watermark {
    right: 1.25rem;
}

[dir="rtl"] .watermark {
    left: 1.25rem;
}

/* Menu */

.menu-bar-position {
    position: relative;
    z-index: $z-index-menu-bar;
}
/* Alerts */

.alerts-container {
    display: flex;
    justify-content: center;
    width: 100%;
    z-index: $z-index-alerts;
    position: absolute;
    margin-top: 53px;
    pointer-events: none;
}

/*
    Make the (background) page not scrollable when modals are open
    This CSS class is automatically added to the body when react-modal is open
*/
:global(.ReactModal__Body--open) {
    overflow: hidden;
}
